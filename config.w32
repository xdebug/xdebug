// vim:ft=javascript

ARG_WITH("xdebug", "Xdebug support", "no");

ARG_WITH("xdebug-compression", "whether to compress profiler files (requires zlib)", "no");

if (PHP_XDEBUG != 'no') {
	var XDEBUG_BASE_SOURCES="base.c filter.c ctrl_socket.c"
	var XDEBUG_LIB_SOURCES="usefulstuff.c cmd_parser.c compat.c crc32.c file.c hash.c headers.c lib.c llist.c log.c set.c str.c timing.c var.c var_export_html.c var_export_line.c var_export_text.c var_export_xml.c xml.c"

	var XDEBUG_COVERAGE_SOURCES="branch_info.c code_coverage.c"
	var XDEBUG_DEBUGGER_SOURCES="com.c debugger.c handler_dbgp.c handlers.c"
	var XDEBUG_DEVELOP_SOURCES="develop.c monitor.c php_functions.c stack.c superglobals.c"
	var XDEBUG_GCSTATS_SOURCES="gc_stats.c"
	var XDEBUG_PROFILER_SOURCES="profiler.c"
	var XDEBUG_TRACING_SOURCES="trace_computerized.c trace_flamegraph.c trace_html.c trace_textual.c tracing.c"
	
	var files = "xdebug.c";

	var XDEBUG_PHP_VERSION = 10000 * PHP_VERSION + 100 * PHP_MINOR_VERSION + 1 * PHP_RELEASE_VERSION;
	if (XDEBUG_PHP_VERSION < 80000) {
		ERROR("not supported. Need a PHP version >= 8.0.0 and < 8.6.0 (found " + XDEBUG_PHP_VERSION + ")");
	} else if (XDEBUG_PHP_VERSION >= 80600) {
		ERROR("not supported. Need a PHP version >= 8.0.0 and < 8.6.0 (found " + XDEBUG_PHP_VERSION + ")");
	} else {
		MESSAGE("supported (" + XDEBUG_PHP_VERSION + ")");
	}

	if (typeof(ZEND_EXTENSION) == 'undefined') {
		EXTENSION('xdebug', files);
	} else {
		ZEND_EXTENSION('xdebug', files);
	}
	ADD_FLAG("CFLAGS_XDEBUG", " /I " + configure_module_dirname + " ");
	ADD_FLAG("CFLAGS_XDEBUG", " /I " + configure_module_dirname + "/src ");
	ADD_SOURCES(configure_module_dirname + "/src/base", XDEBUG_BASE_SOURCES, "xdebug");
	ADD_SOURCES(configure_module_dirname + "/src/lib", XDEBUG_LIB_SOURCES, "xdebug");
	ADD_SOURCES(configure_module_dirname + "/src/coverage", XDEBUG_COVERAGE_SOURCES, "xdebug");
	ADD_SOURCES(configure_module_dirname + "/src/debugger", XDEBUG_DEBUGGER_SOURCES, "xdebug");
	ADD_SOURCES(configure_module_dirname + "/src/develop", XDEBUG_DEVELOP_SOURCES, "xdebug");
	ADD_SOURCES(configure_module_dirname + "/src/gcstats", XDEBUG_GCSTATS_SOURCES, "xdebug");
	ADD_SOURCES(configure_module_dirname + "/src/profiler", XDEBUG_PROFILER_SOURCES, "xdebug");
	ADD_SOURCES(configure_module_dirname + "/src/tracing", XDEBUG_TRACING_SOURCES, "xdebug");

	// PHP_ZLIB is "yes"/"no" for in-tree builds, but boolean for phpize builds
	var XDEBUG_ZLIB = (!MODE_PHPIZE && PHP_ZLIB == "yes") || (MODE_PHPIZE && PHP_ZLIB);

	if (PHP_XDEBUG_COMPRESSION != "no") {
		if (((!XDEBUG_ZLIB) && (CHECK_LIB("zlib_a.lib;zlib.lib", "xdebug", PHP_XDEBUG))) ||
			(PHP_ZLIB_SHARED && CHECK_LIB("zlib.lib", "xdebug", PHP_XDEBUG)) ||
			(XDEBUG_ZLIB && (!PHP_ZLIB_SHARED))
		) {
			AC_DEFINE('HAVE_XDEBUG_ZLIB', 1);
		}
	}

	AC_DEFINE("HAVE_XDEBUG_CONTROL_SOCKET_SUPPORT", 1, "Xdebug control socket support");

	AC_DEFINE("HAVE_XDEBUG", 1, "Xdebug support");
}
